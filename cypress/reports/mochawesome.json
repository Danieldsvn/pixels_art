{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 27,
    "pending": 0,
    "failures": 14,
    "start": "2021-12-10T03:39:46.041Z",
    "end": "2021-12-10T03:41:11.466Z",
    "duration": 85425,
    "testsRegistered": 41,
    "passPercent": 65.85365853658537,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "f9466d3f-cb08-40aa-9205-547c742697a7",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "8e44f8c7-58ab-4317-aa46-06d2f0674693",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 342,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "44ca172c-5532-44ff-b846-ccb2f626d707",
              "parentUUID": "8e44f8c7-58ab-4317-aa46-06d2f0674693",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "44ca172c-5532-44ff-b846-ccb2f626d707"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 342,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "dbb964cf-4053-42a0-b0d3-dab62f92f811",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 241,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');\ncy.get('#color-palette').children('.color');",
              "err": {},
              "uuid": "1784a14b-5b92-4538-8e66-fe60071c68ce",
              "parentUUID": "dbb964cf-4053-42a0-b0d3-dab62f92f811",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 384,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "8038a3cf-41b0-4768-83ee-0fa51e36ee79",
              "parentUUID": "dbb964cf-4053-42a0-b0d3-dab62f92f811",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 262,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "0fc647f6-9104-4c1e-9ac9-e0e121414451",
              "parentUUID": "dbb964cf-4053-42a0-b0d3-dab62f92f811",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 228,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "3f58fac6-597a-4f89-905a-163eca882529",
              "parentUUID": "dbb964cf-4053-42a0-b0d3-dab62f92f811",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 217,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "22b22c49-9c83-456a-8587-007246b15664",
              "parentUUID": "dbb964cf-4053-42a0-b0d3-dab62f92f811",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 185,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "46283a04-b23f-4d1f-8ae2-fa0486777c33",
              "parentUUID": "dbb964cf-4053-42a0-b0d3-dab62f92f811",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 160,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "f8d0cffb-935c-4c27-bfe7-3d2a4de59211",
              "parentUUID": "dbb964cf-4053-42a0-b0d3-dab62f92f811",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1784a14b-5b92-4538-8e66-fe60071c68ce",
            "8038a3cf-41b0-4768-83ee-0fa51e36ee79",
            "0fc647f6-9104-4c1e-9ac9-e0e121414451",
            "3f58fac6-597a-4f89-905a-163eca882529",
            "22b22c49-9c83-456a-8587-007246b15664",
            "46283a04-b23f-4d1f-8ae2-fa0486777c33",
            "f8d0cffb-935c-4c27-bfe7-3d2a4de59211"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1677,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "311f7ddf-07b2-48a2-aafb-ac7b835b5e1f",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 221,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "536c5c65-3491-463e-9d87-647f2fd5b095",
              "parentUUID": "311f7ddf-07b2-48a2-aafb-ac7b835b5e1f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 283,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "702bc32a-806c-4eb3-acfe-8f7e1bd7d044",
              "parentUUID": "311f7ddf-07b2-48a2-aafb-ac7b835b5e1f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "536c5c65-3491-463e-9d87-647f2fd5b095",
            "702bc32a-806c-4eb3-acfe-8f7e1bd7d044"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 504,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "81a072c7-ddaa-4f11-a721-0fc230ae25c4",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 139,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "223341ef-652f-47a7-a86b-18c86f66e1f9",
              "parentUUID": "81a072c7-ddaa-4f11-a721-0fc230ae25c4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 143,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "5a2c49cb-de29-4e37-9e8a-5c22dd53df40",
              "parentUUID": "81a072c7-ddaa-4f11-a721-0fc230ae25c4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 269,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "e88b30dd-b25b-4899-88dc-c94d98381ab0",
              "parentUUID": "81a072c7-ddaa-4f11-a721-0fc230ae25c4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 136,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "f0f690d8-667c-4175-abf3-0021a595441f",
              "parentUUID": "81a072c7-ddaa-4f11-a721-0fc230ae25c4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "223341ef-652f-47a7-a86b-18c86f66e1f9",
            "5a2c49cb-de29-4e37-9e8a-5c22dd53df40",
            "e88b30dd-b25b-4899-88dc-c94d98381ab0",
            "f0f690d8-667c-4175-abf3-0021a595441f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 687,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "081c1f45-3f52-4959-90e9-441078083b6d",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 415,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "82b364c0-381e-4c85-9f3f-f0360f40a0e5",
              "parentUUID": "081c1f45-3f52-4959-90e9-441078083b6d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 321,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "eae8f68a-d6db-4251-a372-9009f32fc61f",
              "parentUUID": "081c1f45-3f52-4959-90e9-441078083b6d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "82b364c0-381e-4c85-9f3f-f0360f40a0e5",
            "eae8f68a-d6db-4251-a372-9009f32fc61f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 736,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "6cabe3b8-ca7e-49a8-9d5a-ce2fb8003f27",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 198,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "fd2f28b2-0bfb-48e8-9b5f-e04bd9a74b39",
              "parentUUID": "6cabe3b8-ca7e-49a8-9d5a-ce2fb8003f27",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 238,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "b0e52aa1-28b0-4d6d-9514-2a423f488b76",
              "parentUUID": "6cabe3b8-ca7e-49a8-9d5a-ce2fb8003f27",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fd2f28b2-0bfb-48e8-9b5f-e04bd9a74b39",
            "b0e52aa1-28b0-4d6d-9514-2a423f488b76"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 436,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "eaf074e5-b9f2-4f43-91d3-080f34ef1d0b",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 565,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "6c98479b-8499-47ac-ba1a-5eb48e4f6609",
              "parentUUID": "eaf074e5-b9f2-4f43-91d3-080f34ef1d0b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 8810,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "fa24baad-d30f-4aea-bc39-6fce4ebc601c",
              "parentUUID": "eaf074e5-b9f2-4f43-91d3-080f34ef1d0b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6c98479b-8499-47ac-ba1a-5eb48e4f6609",
            "fa24baad-d30f-4aea-bc39-6fce4ebc601c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9375,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "54d1ba50-8d5d-4c9b-bcb7-9d25fb9852f9",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2309,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "0491678f-63e3-4ac8-816c-318961e6f125",
              "parentUUID": "54d1ba50-8d5d-4c9b-bcb7-9d25fb9852f9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 8756,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "525e0827-c00e-4a2e-ab1d-08187d47718b",
              "parentUUID": "54d1ba50-8d5d-4c9b-bcb7-9d25fb9852f9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 1760,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "48d313f7-ac32-49da-bb35-9964ef9d6847",
              "parentUUID": "54d1ba50-8d5d-4c9b-bcb7-9d25fb9852f9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0491678f-63e3-4ac8-816c-318961e6f125",
            "525e0827-c00e-4a2e-ab1d-08187d47718b",
            "48d313f7-ac32-49da-bb35-9964ef9d6847"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12825,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1e1a32c3-6079-47e2-8a27-731466f8f105",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 237,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "08165d7a-bec3-4304-9846-3ba9f5c29b0a",
              "parentUUID": "1e1a32c3-6079-47e2-8a27-731466f8f105",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 127,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "f3e3936b-7418-46cf-8d27-78e81da79a16",
              "parentUUID": "1e1a32c3-6079-47e2-8a27-731466f8f105",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 140,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "63e2c5b7-0355-44cd-a745-5395ed34bae6",
              "parentUUID": "1e1a32c3-6079-47e2-8a27-731466f8f105",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2515,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "27d7ee77-b91b-4d45-9bd3-57d4b1121512",
              "parentUUID": "1e1a32c3-6079-47e2-8a27-731466f8f105",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "08165d7a-bec3-4304-9846-3ba9f5c29b0a",
            "f3e3936b-7418-46cf-8d27-78e81da79a16",
            "63e2c5b7-0355-44cd-a745-5395ed34bae6",
            "27d7ee77-b91b-4d45-9bd3-57d4b1121512"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3019,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "7b2a95bf-eca4-43c9-b4d2-d542bf19f4cc",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4531,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34155/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34155/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34155/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34155/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34155/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34155/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34155/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34155/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34155/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34155/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34155/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34155/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34155/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "7a45940b-b261-4ee2-a712-09d3e0f359b1",
              "parentUUID": "7b2a95bf-eca4-43c9-b4d2-d542bf19f4cc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4463,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:34155/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34155/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34155/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34155/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34155/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34155/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34155/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34155/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34155/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34155/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34155/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34155/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34155/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "543395dd-f17c-4667-9fe1-c96d55ccd75d",
              "parentUUID": "7b2a95bf-eca4-43c9-b4d2-d542bf19f4cc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4412,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:34155/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34155/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34155/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34155/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34155/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34155/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34155/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34155/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34155/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34155/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34155/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34155/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34155/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "89044a59-61d4-41a5-af57-a6d284d1715b",
              "parentUUID": "7b2a95bf-eca4-43c9-b4d2-d542bf19f4cc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4475,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:34155/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34155/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34155/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34155/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34155/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34155/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34155/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34155/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34155/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34155/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34155/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34155/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34155/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "13a685b7-2193-43cb-bd71-171dc8aeefea",
              "parentUUID": "7b2a95bf-eca4-43c9-b4d2-d542bf19f4cc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4434,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34155/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34155/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34155/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34155/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34155/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34155/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34155/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34155/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34155/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34155/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34155/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34155/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34155/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "46ebd917-aa29-41d1-b35d-38dd75d57441",
              "parentUUID": "7b2a95bf-eca4-43c9-b4d2-d542bf19f4cc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4413,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34155/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34155/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34155/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34155/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34155/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34155/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34155/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34155/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34155/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34155/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34155/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34155/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34155/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "1cfef362-958b-41b0-8557-047d8ee77604",
              "parentUUID": "7b2a95bf-eca4-43c9-b4d2-d542bf19f4cc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4462,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:34155/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34155/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34155/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34155/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34155/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34155/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34155/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34155/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34155/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34155/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34155/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34155/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34155/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "059a353d-dead-4368-88bd-bc70a4dcb9d5",
              "parentUUID": "7b2a95bf-eca4-43c9-b4d2-d542bf19f4cc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4442,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34155/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34155/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34155/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34155/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34155/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34155/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34155/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34155/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34155/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34155/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34155/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34155/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34155/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "b1589326-070f-4c9d-937a-f90569f430a2",
              "parentUUID": "7b2a95bf-eca4-43c9-b4d2-d542bf19f4cc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4460,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34155/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34155/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34155/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34155/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34155/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34155/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34155/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34155/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34155/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34155/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34155/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34155/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34155/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "106d514e-52c6-4652-857c-f4d84f0fd276",
              "parentUUID": "7b2a95bf-eca4-43c9-b4d2-d542bf19f4cc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "7a45940b-b261-4ee2-a712-09d3e0f359b1",
            "543395dd-f17c-4667-9fe1-c96d55ccd75d",
            "89044a59-61d4-41a5-af57-a6d284d1715b",
            "13a685b7-2193-43cb-bd71-171dc8aeefea",
            "46ebd917-aa29-41d1-b35d-38dd75d57441",
            "1cfef362-958b-41b0-8557-047d8ee77604",
            "059a353d-dead-4368-88bd-bc70a4dcb9d5",
            "b1589326-070f-4c9d-937a-f90569f430a2",
            "106d514e-52c6-4652-857c-f4d84f0fd276"
          ],
          "pending": [],
          "skipped": [],
          "duration": 40092,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a67c0ff0-f5bf-4715-b4bd-3defe75b60b4",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4418,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34155/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34155/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34155/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34155/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34155/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34155/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34155/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34155/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34155/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34155/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34155/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34155/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34155/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "f76de341-d0a0-469f-96bd-06cf55278c2b",
              "parentUUID": "a67c0ff0-f5bf-4715-b4bd-3defe75b60b4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4437,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34155/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34155/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34155/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34155/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34155/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34155/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34155/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34155/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34155/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34155/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34155/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34155/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34155/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "aab10ba5-3624-44af-81ec-22effe76f0c6",
              "parentUUID": "a67c0ff0-f5bf-4715-b4bd-3defe75b60b4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4418,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34155/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34155/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34155/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34155/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34155/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34155/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34155/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34155/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34155/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34155/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34155/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34155/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34155/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "aa4ce245-f48e-41c4-8613-dee2ab902680",
              "parentUUID": "a67c0ff0-f5bf-4715-b4bd-3defe75b60b4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "f76de341-d0a0-469f-96bd-06cf55278c2b",
            "aab10ba5-3624-44af-81ec-22effe76f0c6",
            "aa4ce245-f48e-41c4-8613-dee2ab902680"
          ],
          "pending": [],
          "skipped": [],
          "duration": 13273,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "240d8e3d-357d-4d0e-86cf-d4b4c2cb3c07",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 506,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:34155/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:34155/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:34155/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:34155/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:34155/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:34155/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:34155/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:34155/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34155/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34155/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:34155/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34155/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34155/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34155/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "9b88f270-2705-49d3-b1a0-747a49847627",
              "parentUUID": "240d8e3d-357d-4d0e-86cf-d4b4c2cb3c07",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 606,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:34155/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:34155/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:34155/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:34155/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:34155/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:34155/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:34155/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:34155/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34155/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34155/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:34155/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34155/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34155/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34155/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "65a37b04-7bae-4253-b7a3-422ec7a20a53",
              "parentUUID": "240d8e3d-357d-4d0e-86cf-d4b4c2cb3c07",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "9b88f270-2705-49d3-b1a0-747a49847627",
            "65a37b04-7bae-4253-b7a3-422ec7a20a53"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1112,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}